[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-data-access-api"
description = "API to interact with a few AIND databases"
license = {text = "MIT"}
requires-python = ">=3.7"
authors = [
    {name = "Allen Institute for Neural Dynamics"}
]
classifiers = [
    "Programming Language :: Python :: 3"
]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    "requests",
    "pydantic==1.10.6"
]

[project.optional-dependencies]
dev = [
    "black",
    "coverage",
    "flake8",
    "interrogate",
    "isort",
    "Sphinx",
    "furo",
    "aind-data-access-api[full]"
]
secrets = [
    "boto3==1.26.94",
    "botocore==1.29.94"
]
docdb = [
    "pymongo==4.3.3"
]
rds = [
    "psycopg2-binary==2.9.5",
    "pandas==1.5.3 ",
    "SQLAlchemy==2.0.7"
]
full = [
    "aind-data-access-api[secrets]",
    "aind-data-access-api[docdb]",
    "aind-data-access-api[rds]",
]
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "aind_data_access_api.__version__"}

[tool.black]
line-length = 79
target_version = ['py36']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  | .gitignore
)
'''

[tool.coverage.run]
omit = ["*__init__*"]
source = ["aind_data_access_api", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "from",
    "import",
    "pragma: no cover"
]
fail_under = 100

[tool.isort]
line_length = 79
profile = "black"

[tool.interrogate]
exclude = ["setup.py", "docs", "build"]
fail-under = 100
